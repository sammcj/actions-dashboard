name: Build Github Actions Dashboard

on:
  # pull_request:
  #   branches:
  #     - 'main'
  # push:
  #   branches:
  #     - 'main'
  #     - 'dev'
  #     - 'feature/**'
  #     - '!nobuild/**'
  workflow_dispatch:
    inputs:
      publish-image:
        description: "Publish container image to ghcr.io"
        required: false
        type: boolean
        default: false
  schedule:
    - cron: "30 14 9 * *" #  run workflow monthly

# One build per branch, cancel out of date builds only on pull requests and feature branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') || startsWith(github.ref, 'refs/heads/feature') }}

permissions:
  contents: read
  packages: write
  pull-requests: write

env:
  NODE_OPTIONS: --max_old_space_size=4096

jobs:
  lint-dockerfile:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-hadolint@v1
        with:
          hadolint_ignore: DL3033 DL3003
          fail_on_error: true
          level: error
          reporter: github-pr-review
          filter_mode: added # Only lint added / modified lines
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ./client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version-file: ".nvmrc"

      - name: Install packages for server
        run: npm ci --ignore-scripts

      - name: Run tests
        run: npm run test

      - name: Eliminate devDependencies
        run: npm prune --production

  build-publish-docker:
    needs: build-dev
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILD: true
      NODE_ENV: production
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ./client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version-file: ".nvmrc"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/github-action-dashboard
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event.inputs.publish-image == true }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/github-action-dashboard:{{major}}.{{minor}}
          cache-to: type=inline

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }} #this is for logging.
